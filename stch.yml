title: Stretching Glyph Decomposition
registered: Microsoft
required: true
group: Common
script:
  arab:
    order: 0
  syrc:
    order: 0
description: |
  Right.


  The `stch` feature is part of the Arabic complex shaper. (It is the first
  feature processed in the glyph preprocessing phase). It was designed to
  implement the Syriac Abbreviation Mark (U+070F), which stretches to fill the
  width of the enclosed text.


  The feature should be implemented by the font engineer as a multiple substitution,
  replacing the glyph mapped to U+070F with an *odd number of glyphs*. When applying
  the feature, the shaper performs the following actions:


    * The substitution rules specified in the `stch` feature are applied, and the
    sequence of glyphs returned by the rule applications are collected.

    * The first glyph in the returned sequence is placed at the start of the glyph stream.

    * The final glyph in the returned sequence is placed at the end of the glyph stream.

    * At the end of processing, after positioning rules have been applied, the
      width of the whole glyph stream is calculated.

    * Next, odd-numbered glyphs inside the returned sequence other than the
      first and final glyph are positioned such that they are distributed
      evenly across the glyph stream. (For example, if there are five glyphs in the
      sequence returned from `stch`, the third glyph is positioned horizontally
      to appear in the middle of the glyph stream. If there are seven glyphs, the
      third glyph is positioned to appear one-third of the way along the glyph
      stream, and the fifth to appear two-thirds of the way along.)

    * Finally, even-numbered glyphs inside the returned sequence are positioned
      and *repeated* such that their widths completely fill the spaces between
      the odd-numbered glyphs.

  Further: the first and last glyphs in the returned sequence may be base glyphs
  or mark glyphs, and should have a non-zero horizontal advance. The
  remaining glyphs must be set as mark glyphs, but should also have a non-zero
  horizontal advance.


  Note that although the OpenType specification describes this feature as having
  no "script/language sensitivity", and in theory can be applied to any situation
  where a glyph is decomposed and repeated to stretch over an enclosed sequence
  of glyphs (for example, enclosed numbers, Arabic year or end-of-aya marks, etc.),
  it is only processed as part of the Arabic complex shaper.


  Note also that as of macOS 11.4, the CoreText shaper does not apply this feature,
  and even if the feature is manually applied, the CoreText shaper does not implement
  the distribution and stretching algorithm required to make the feature operated
  as expected. This has led some font engineers to create their own, manual
  implementation inside the font; while this is an interesting engineering exercise,
  adding in the repeated glyphs manually inside the `stch` feature leads to
  erroneous results when such a font is used with a shaping engine which *does*
  implement `stch` as specified, and cannot be recommended.
fea: |
  feature stch {
    sub abbreviation-syriac by
      abbreviation-syriac.start
      abbreviation-syriac.line
      abbreviation-syriac.linedot
      abbreviation-syriac.line
      abbreviation-syriac.end;
  } stch;
done: true
